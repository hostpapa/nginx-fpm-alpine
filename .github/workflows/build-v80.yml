name: Build PHP V8.0

on:
  push:
    branches: [ main ]

# Ensure existing runs are cancelled automatically if still in progress when a
# new one commit is pushed to this pull request. This is scoped to the branch
# and workflow name so that we can run multiple workflows on a branch but
# ensure they're exclusive with regards to concurrency.
concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-image:
    name: Build PHP V8.0 Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@9614fae9e5c5eddabb09f90a270fcb487c9f7149
        with:
          cosign-release: 'v1.13.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract the current version of PHP in Dockerfile
      - name: Extract Current Version
        run: |
          FILE_VER_STRING=$(sed -n '7p' < ./8.0/alpine3.16/fpm-nginx/Dockerfile)
          VER_TRIM_START=$(echo $FILE_VER_STRING | cut -d' ' -f2)
          VER_TRIM_END=$(echo $VER_TRIM_START | cut -d'-' -f1)
          VER_REMOVE_COLON=$(echo $VER_TRIM_END | sed 's/://')
          echo "CURRENT_VERSION=$VER_REMOVE_COLON" >> $GITHUB_ENV

      # Does the Image exist
      - name: Does the image exist?
        id: image_exists
        continue-on-error: true
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CURRENT_VERSION }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        if: ${{ steps.image_exists.outcome == 'failure' }}
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # ${{ env.CURRENT_VERSION }}
          tags: |
            type=raw,value=${{ env.CURRENT_VERSION }}

      # Build Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build Development Web image & Push
        id: build-web-image
        if: ${{ steps.image_exists.outcome == 'failure' }}
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: ./8.0/alpine3.16/fpm-nginx/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./8.0/alpine3.16/fpm-nginx/Dockerfile
          build-args: |
            VERSION=${{ env.CURRENT_VERSION }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ steps.image_exists.outcome == 'failure' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-web-image.outputs.digest }}
